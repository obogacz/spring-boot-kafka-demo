# Used images references:
# zookeeper:      https://hub.docker.com/r/confluentinc/cp-zookeeper
#                 https://docs.confluent.io/platform/current/installation/docker/config-reference.html#zk-configuration
# kafka-broker:   https://hub.docker.com/r/confluentinc/cp-kafka
#                 https://docs.confluent.io/platform/current/installation/docker/config-reference.html#confluent-ak-configuration

version: '3.8'
services:

  ### Apache Kafka Cluster ###

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.3
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVERS: zookeeper:2888:3888
    restart: unless-stopped

  kafka-broker-1:
    image: confluentinc/cp-kafka:7.4.3
    container_name: kafka-broker-1
    ports:
      - "9091:9091"
      - "29091:29091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-1:19091,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091,DOCKER://host.docker.internal:29091
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    restart: unless-stopped
    depends_on:
      - zookeeper

  kafka-broker-2:
    image: confluentinc/cp-kafka:7.4.3
    container_name: kafka-broker-2
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-2:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    restart: unless-stopped
    depends_on:
      - zookeeper

  kafka-broker-3:
    image: confluentinc/cp-kafka:7.4.3
    container_name: kafka-broker-3
    ports:
      - "9093:9093"
      - "29093:29093"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka-broker-3:19093,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093,DOCKER://host.docker.internal:29093
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    restart: unless-stopped
    depends_on:
      - zookeeper

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:7.4.3
    container_name: kafka-schema-registry
    ports:
      - "9081:9081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "kafka-broker-1:19091,kafka-broker-2:19092,kafka-broker-3:19093"
    restart: unless-stopped
    depends_on:
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3

  kafka-control-center:
    image: confluentinc/cp-enterprise-control-center:7.4.3
    container_name: kafka-control-center
    ports:
      - "9090:9090"
    environment:
      PORT: 9090
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka-broker-1:19091,kafka-broker-2:19092,kafka-broker-3:19093"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://kafka-schema-registry:9081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
    restart: unless-stopped
    depends_on:
      - zookeeper
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - kafka-schema-registry

  ### Demo Producer & Consumer ###

  producer-1:
    build:
      context: kafka-producer
      dockerfile: Dockerfile
    image: kafka-producer:latest
    container_name: producer-1
    profiles:
      - demo
    ports:
      - "8081:8081"
    environment:
      # SpringBoot
      SPRING_PORT: 8081
      SCHEDULED_SEND_EVENT_FIX_DELAY: 200
      # Apache Kafka Producer
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker-1:19091,kafka-broker-2:19092,kafka-broker-3:19093
      KAFKA_PRODUCER_STRATEGY: at-most-once
      KAFKA_PRODUCER_PUBLISHING: async
      KAFKA_TOPICS_PURCHASES_NAME: richdemo.customer.purchases.0
      KAFKA_TOPICS_PURCHASES_PARTITIONS: 3
      KAFKA_TOPICS_PURCHASES_REPLICAS: 2
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3

  consumer-1:
    build:
      context: kafka-consumer
      dockerfile: Dockerfile
    image: kafka-consumer:latest
    container_name: consumer-1
    profiles:
      - demo
    ports:
      - "8091:8091"
    environment:
      # SpringBoot
      SPRING_PORT: 8091
      SPRING_DATASOURCE_URL: jdbc:postgresql://consumer-database-cache:5432/dbcache
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      # Apache Kafka Consumer
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker-1:19091,kafka-broker-2:19092,kafka-broker-3:19093
      KAFKA_CONSUMER_CLIENT_ID: kafka-demo-consumer
      KAFKA_CONSUMER_GROUP_ID: kafka-demo-consumer-group-id-1
      KAFKA_CONSUMER_TYPE: single
      KAFKA_CONSUMER_STRATEGY: at-most-once
      KAFKA_TOPICS_PURCHASES: richdemo.customer.purchases.0
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - consumer-database-cache

  consumer-2:
    build:
      context: kafka-consumer
      dockerfile: Dockerfile
    image: kafka-consumer:latest
    container_name: consumer-2
    profiles:
      - demo
    ports:
      - "8092:8092"
    environment:
      # SpringBoot
      SPRING_PORT: 8092
      SPRING_DATASOURCE_URL: jdbc:postgresql://consumer-database-cache:5432/dbcache
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      # Apache Kafka Consumer
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker-1:19091,kafka-broker-2:19092,kafka-broker-3:19093
      KAFKA_CONSUMER_CLIENT_ID: kafka-demo-consumer
      KAFKA_CONSUMER_GROUP_ID: kafka-demo-consumer-group-id-1
      KAFKA_CONSUMER_TYPE: single
      KAFKA_CONSUMER_STRATEGY: at-most-once
      KAFKA_TOPICS_PURCHASES: richdemo.customer.purchases.0
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - consumer-database-cache

  consumer-3:
    build:
      context: kafka-consumer
      dockerfile: Dockerfile
    image: kafka-consumer:latest
    container_name: consumer-3
    profiles:
      - demo
    ports:
      - "8093:8093"
    environment:
      # SpringBoot
      SPRING_PORT: 8093
      SPRING_DATASOURCE_URL: jdbc:postgresql://consumer-database-cache:5432/dbcache
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      # Apache Kafka Consumer
      KAFKA_BOOTSTRAP_SERVERS: kafka-broker-1:19091,kafka-broker-2:19092,kafka-broker-3:19093
      KAFKA_CONSUMER_CLIENT_ID: kafka-demo-consumer
      KAFKA_CONSUMER_GROUP_ID: kafka-demo-consumer-group-id-1
      KAFKA_CONSUMER_TYPE: single
      KAFKA_CONSUMER_STRATEGY: at-most-once
      KAFKA_TOPICS_PURCHASES: richdemo.customer.purchases.0
    depends_on:
      - kafka-broker-1
      - kafka-broker-2
      - kafka-broker-3
      - consumer-database-cache

  consumer-database-cache:
    image: postgres:16.1-alpine
    container_name: consumer-database-cache
    profiles:
      - demo
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: dbcache
    restart: unless-stopped
